number_of_abstracts <- function (word) {
part_b_search_topic <- word
query_3 <- EUtilsSummary(part_b_search_topic, mindate = 2018, maxdate = 2022)
Number <- QueryCount(query_3)
print(Number) }
#install.packages('readr')
library(readr)
data<- read.csv('icd10.csv')#,header = TRUE,sep = , quote =)
#install.packages('readr')
library(readr)
data<- read.csv('icd10.csv')#,header = TRUE,sep = )
#install.packages('readr')
library(readr)
data<- read.csv('icd10.csv')#,header = TRUE)
#install.packages('readr')
library(readr)
data<- read.csv('icd10.csv'#,header = TRUE,sep = )
#install.packages('readr')
library(readr)
#install.packages('readr')
library(readr)
data<- read.csv('icd10.csv'#,header = TRUE,sep = )
#Function for number of abstracts
number_of_abstracts <- function (word) {
#Function for number of abstracts
number_of_abstracts <- function (word) {
part_b_search_topic <- word
query_3 <- EUtilsSummary(part_b_search_topic, mindate = 2018, maxdate = 2022)
Number <- QueryCount(query_3)
print(Number) }
#install.packages('readr')
library(readr)
data<- read.csv('icd10.csv'#,header = TRUE,sep = )
#Code A164
Dis_1<-data[A164]
#Code G164
Dis_2<-data[111,2]
#function that returns the number of abstracts
number_of_abstracts <- function (word) {
part_b_search_topic <- word
query_3 <- EUtilsSummary(part_b_search_topic, mindate = 2018, maxdate = 2022)
Number <- QueryCount(query_3)
print(Number)
}
#importing comma separated value data
#install.packages("readr")
library(readr)
data<- read.csv("icd10.csv"#,header = TRUE,sep = ,)
#printing random code
Dis_1<-data[978,2]
#importing comma separated value data
#install.packages("readr")
library(readr)
#importing comma separated value data
#install.packages("readr")
library(readr)
source("C:/Users/Gina/Downloads/Ex_3_03119214.R")
#install.packages('readr')
library(readr)
data<- read.csv(("icd10.csv"),header = TRUE,sep = )
#install.packages('readr')
library(readr)
data<- read.csv(icd10.csv,header = TRUE,sep = )
#install.packages('readr')
library(readr)
data<- read.csv('icd10.csv',header = TRUE,sep = )
#install.packages('readr')
library(readr)
data<- read.csv('icd10.csv', header = TRUE,sep = "")
#importing comma separated value data
#install.packages("readr")
library(readr)
data<- read.csv(("icd10.csv"),header = TRUE,sep = ,)
#install.packages('readr')
library(readr)
data<- read.csv(icd10.csv, header = TRUE,sep = )
#install.packages('readr')
library(readr)
data<- read.csv('icd10.csv', header = TRUE,sep = )
#install.packages('readr')
library(readr)
data<- read.csv('icd10.csv', header = TRUE,sep = )
#importing comma separated value data
#install.packages("readr")
library(readr)
data<- read.csv(("icd10.csv"),header = TRUE,sep = ,)
#install.packages('readr')
library(readr)
data<- read.csv(file ='icd10.csv', header = TRUE,sep = )
#install.packages('readr')
library(readr)
data<- read.csv(file ='icd10.csv', header = TRUE,sep = , row.names = NULL)
#install.packages('readr')
library(readr)
data<- read.csv(file ='icd10.csv', header = TRUE,sep = , row.names = NULL)
#Code A164
Dis_1<-data[A64]
#install.packages('readr')
library(readr)
data<- read.csv(file ='icd10.csv', header = TRUE,sep = , row.names = NULL)
#Code A164
print.data.frame(A64)
#install.packages('readr')
library(readr)
data<- read.csv(file ='icd10.csv', header = TRUE,sep = , row.names = NULL)
#Code A164
print.data.frame(A64;)
#install.packages('readr')
library(readr)
data<- read.csv(file ='icd10.csv', header = TRUE,sep = , row.names = NULL)
#Code A164
print.data.frame(A64, right = FALSE, row.names = NULL)
#importing comma separated value data
#install.packages("readr")
library(readr)
data<- read.csv(("icd10.csv"),header = TRUE,sep = , row.names = NULL)
#printing random code
Dis_1<-data[978,2]
print(Dis_1)
#importing comma separated value data
#install.packages("readr")
library(readr)
data<- read.csv(("icd10.csv"),header = TRUE, sep = , quote = TRUE, row.names = NULL)
#importing comma separated value data
#install.packages("readr")
library(readr)
data<- read.csv(("icd10.csv"),header = TRUE, sep = , quote = , row.names = NULL)
#printing random code
Dis_1<-data[978,2]
print(Dis_1)
#install.packages('readr')
library(readr)
data<- read.csv(file ='icd10.csv', header = TRUE,sep = , row.names = NULL)
#Code A164
print.data.frame(434, right = FALSE, row.names = NULL)
#install.packages('readr')
library(readr)
data<- read.csv(file ='icd10.csv', header = TRUE,sep = , row.names = NULL)
#Code A164
print.data.frame(434, right = FALSE)
#Code A164
print.data.frame(434)
View(data)
#install.packages('readr')
library(readr)
data<- read.csv(file ='icd10.csv', header = TRUE,sep = , row.names = TRUE)
data<- read.csv(file ='icd10.csv', header = TRUE,sep = , row.names = )
#install.packages('readr')
library(readr)
data<- read.csv(file ='icd10.csv', header = TRUE,sep = , row.names = NULL)
#Code A164
Object_1 <- data.frame(434)
print(Object_1)
#install.packages('readr')
library(readr)
data<- read.csv(file ='icd10.csv', header = TRUE,sep = , row.names = NULL)
#Code A164
Object_1 <- data.frame[434]
#Code A164
print('Name of Disease' = data)
#install.packages('readr')
library(readr)
data<- read.csv(file ='icd10.csv', header = TRUE,sep = , row.names = NULL)
#Code A164
cell_val = data[434][1]
#Code A164
cell_val = data[434][2]
#Code G164
Dis_2<-data[111,2]
print(Dis_2)
#Code A164
cell_val = data[434, 2]
print(cell_val)
#Code A164
cell_val = data[434, 1]
print(cell_val)
#install.packages('readr')
library(readr)
data<- read.csv(file ='icd10.csv', header = TRUE,sep = , row.names = NULL)
#Code A164
Obect_1 = data[55, 1]
print(Obect_1)
#Code G64
Object_2 = data[5406,2]
print(Object_2)
#Code G64
Object_2 = data[5406,1]
print(Object_2)
#install.packages('readr')
library(readr)
data<- read.csv(file ='icd10.csv', header = TRUE,sep = , row.names = NULL)
#Code A164
Obect_1 = data[55, 1]
print(Obect_1)
#Code G64
Object_2 = data[5406,1]
print(Object_2)
#Code M8500
Object_3 = data[19694,1]
print(Object_3)
number_of_abstracts(Object_1)
number_of_abstracts(Object_2)
number_of_abstracts(Object_3)
number_of_abstracts(Object_1)
number_of_abstracts(Dis_1)
number_of_abstracts(Dis_2)
number_of_abstracts(Dis_3)
number_of_abstracts(Dis_3)
#printing random code
Dis_1<-data[978,1]
print(Dis_1)
#printing random code
Dis_2<-data[111,1]
print(Dis_2)
#printing  random code
Dis_3<-data[603,1]
print(Dis_3)
number_of_abstracts(Dis_1)
number_of_abstracts(Dis_2)
number_of_abstracts(Dis_3)
number_of_abstracts(Object_1)
number_of_abstracts(Object_2)
number_of_abstracts(Object_3)
number_of_abstracts(Object_1)
number_of_abstracts(Object_2)
number_of_abstracts(Object_3)
number_of_abstracts(Object_1)
number_of_abstracts(Object_2)
number_of_abstracts(Object_3)
#Code A164
Obect_1 = data[55, 1]
print(Obect_1)
#install.packages('readr')
library(readr)
data<- read.csv(file ='icd10.csv', header = TRUE,sep = ";")
#Code A164
Obect_1 = data[55, 1]
print(Obect_1)
#install.packages('readr')
library(readr)
data<- read.csv(file ='icd10.csv', header = TRUE,sep = ";")
#Code A164
Obect_1 = data[55, 2]
print(Obect_1)
number_of_abstracts(Object_1)
number_of_abstracts(Object_2)
number_of_abstracts(Object_3)
number_of_abstracts(Object_1)
#Code A164
Obect_1 = data[55, 2]
print(Obect_1)
Data_1 <- EUtilsSummary(Object_1, mindate = 2021, maxdate = 2023)
get1 <- EUtilsGet(Data_1)
Years1 <- YearPubmed(get1)
hist(Years1, main = 'Diseases', ylab='Articles per year',xlab='Year',border='Black',col=rgb(1,0,0,0.3),xlim = c(2019,2023), breaks = seq(2018.5,2022.5,1))
#plotting Histogram
Data_1 <- EUtilsSummary(Object_1, mindate = 2021, maxdate = 2023)
get1 <- EUtilsGet(Data_1)
Years1 <- YearPubmed(get1)
hist(Years1, main = 'Diseases', ylab='Articles per year',xlab='Year',border='Black',col=rgb(1,0,0,0.3),xlim = c(2019,2023), breaks = seq(2018.5,2022.5,1))
Data_2 <- EUtilsSummary(Object_2, mindate = 2021, maxdate = 2023)
get2 <- EUtilsGet(Data_2)
Years2 <- YearPubmed(get2)
hist(Years2, ylab='Articles per year',xlab='Year',border='Black',col=rgb(0,1,0,0.3),xlim = c(2019,2023), breaks = seq(2018.5,2022.5,1),add = TRUE)
Data_3 <- EUtilsSummary(Object_3, mindate = 2021, maxdate = 2023)
get3 <- EUtilsGet(Data_3)
Years3 <- YearPubmed(get3)
hist(Years3,  ylab='Articles per year',xlab='Year',border='Black',col=rgb(0,0,1,0.3),xlim = c(2019,2023), breaks = seq(2018.5,2022.5,1),add = TRUE)
legend('topright', c(Dis_1,Dis_2,Dis_3), lty = c(1,1,1), col = c('red','darkgray',rgb(1,0,1)),bty = 'n')
subset1 <- subset(data, Object_1)
subset1 <- subset(data, code = "A64")
number_of_abstracts(Object_1)
#install.packages('RISmed')
library(RISmed)
search_topic<-'e-prescription'
search_query<-EUtilsSummary(search_topic, retmax=50, mindate=2014, maxdate=2014)
summary(search_query)
QueryId(search_query) #IDs of collected articles
records<-EUtilsGet(search_query)
class(records)
Number <- QueryCount(query_3)
number_of_abstracts(Object_1)
plotting Histogram
plotting Histogram
plotting Histogram
plotting Histogram
number_of_abstracts(Object_1)
number_of_abstracts(Object_2)
number_of_abstracts(Object_3)
Data_1 <- EUtilsSummary(Object_1, mindate = 2021, maxdate = 2023)
get1 <- EUtilsGet(Data_1)
Years1 <- YearPubmed(get1)
hist(Years1, main = 'Diseases', ylab='Articles per year',xlab='Year',border='Black',col=rgb(1,0,0,0.3),xlim = c(2019,2023), breaks = seq(2018.5,2022.5,1))
Data_2 <- EUtilsSummary(Object_2, mindate = 2021, maxdate = 2023)
get2 <- EUtilsGet(Data_2)
Years2 <- YearPubmed(get2)
hist(Years2, ylab='Articles per year',xlab='Year',border='Black',col=rgb(0,1,0,0.3),xlim = c(2019,2023), breaks = seq(2018.5,2022.5,1),add = TRUE)
Data_3 <- EUtilsSummary(Object_3, mindate = 2021, maxdate = 2023)
get3 <- EUtilsGet(Data_3)
Years3 <- YearPubmed(get3)
hist(Years3,  ylab='Articles per year',xlab='Year',border='Black',col=rgb(0,0,1,0.3),xlim = c(2019,2023), breaks = seq(2018.5,2022.5,1),add = TRUE)
legend('topright', c(Dis_1,Dis_2,Dis_3), lty = c(1,1,1), col = c('red','darkgray',rgb(1,0,1)),bty = 'n')
#install.packages('RISmed')
library(RISmed)
search_topic<-'e-prescription'
search_query<-EUtilsSummary(search_topic, retmax=50, mindate=2014, maxdate=2014)
summary(search_query)
QueryId(search_query) #IDs of collected articles
records<-EUtilsGet(search_query)
class(records)
#Titles of first 20 articles
pubmed_data<-data.frame('Title'=ArticleTitle(records))
head(pubmed_data, 20)
#Summary of last 4 articles
pubmed_data<-data.frame('Abstract'=AbstractText(records))
tail(pubmed_data, 4)
#install.packages('readr')
library(readr)
data<- read.csv(file ='icd10.csv', header = TRUE,sep = ";")
#Code A164
Obect_1 = data[55, 2]
print(Obect_1)
#Code G64
Object_2 = data[5406,2]
print(Object_2)
#Code M8500
Object_3 = data[19694,2]
print(Object_3)
number_of_abstracts(Dis_1)
number_of_abstracts(Dis_2)
number_of_abstracts(Dis_3)
Data_1 <- EUtilsSummary(Dis_1, mindate = 2020, maxdate = 2022)
get1 <- EUtilsGet(Data_1)
Years1 <- YearPubmed(get1)
hist(Years1, main = 'Diseases', ylab='Articles per year',xlab='Year',border='Black',col=rgb(1,0,0,0.3),xlim = c(2019,2023), breaks = seq(2018.5,2022.5,1))
Data_2 <- EUtilsSummary(Dis_2, mindate = 2020, maxdate = 2022)
get2 <- EUtilsGet(Data_2)
Years2 <- YearPubmed(get2)
hist(Years2, ylab='Articles per year',xlab='Year',border='Black',col=rgb(0,1,0,0.3),xlim = c(2019,2023), breaks = seq(2018.5,2022.5,1),add = TRUE)
Data_3 <- EUtilsSummary(Dis_3, mindate = 2020, maxdate = 2022)
get3 <- EUtilsGet(Data_3)
Years3 <- YearPubmed(get3)
hist(Years3,  ylab='Articles per year',xlab='Year',border='Black',col=rgb(0,0,1,0.3),xlim = c(2019,2023), breaks = seq(2018.5,2022.5,1),add = TRUE)
legend('topright', c(Dis_1,Dis_2,Dis_3), lty = c(1,1,1), col = c('red','darkgray',rgb(1,0,1)),bty = 'n')
number_of_abstracts(Object_1)
number_of_abstracts(Object_1)
number_of_abstracts(Object_2)
number_of_abstracts(Object_3)
number_of_abstracts(Object_1)
number_of_abstracts(Object_2)
number_of_abstracts(Object_3)
Data_1 <- EUtilsSummary(Object_1, mindate = 2021, maxdate = 2023)
get1 <- EUtilsGet(Data_1)
Years1 <- YearPubmed(get1)
hist(Years1, main = 'Diseases', ylab='Articles per year',xlab='Year',border='Black',col=rgb(1,0,0,0.3),xlim = c(2019,2023), breaks = seq(2018.5,2022.5,1))
Data_2 <- EUtilsSummary(Object_2, mindate = 2021, maxdate = 2023)
get2 <- EUtilsGet(Data_2)
Years2 <- YearPubmed(get2)
hist(Years2, ylab='Articles per year',xlab='Year',border='Black',col=rgb(0,1,0,0.3),xlim = c(2019,2023), breaks = seq(2018.5,2022.5,1),add = TRUE)
Data_3 <- EUtilsSummary(Object_3, mindate = 2021, maxdate = 2023)
get3 <- EUtilsGet(Data_3)
Years3 <- YearPubmed(get3)
hist(Years3,  ylab='Articles per year',xlab='Year',border='Black',col=rgb(0,0,1,0.3),xlim = c(2019,2023), breaks = seq(2018.5,2022.5,1),add = TRUE)
legend('topright', c(Dis_1,Dis_2,Dis_3), lty = c(1,1,1), col = c('red','darkgray',rgb(1,0,1)),bty = 'n')
Data_1 <- EUtilsSummary(Object_1, mindate = 2021, maxdate = 2023)
get1 <- EUtilsGet(Data_1)
Years1 <- YearPubmed(get1)
hist(Years1, main = 'Diseases', ylab='Articles per year',xlab='Year',border='Black',col=rgb(1,0,0,0.3),xlim = c(2019,2023), breaks = seq(2018.5,2022.5,1))
Data_2 <- EUtilsSummary(Object_2, mindate = 2021, maxdate = 2023)
get2 <- EUtilsGet(Data_2)
Years2 <- YearPubmed(get2)
hist(Years2, ylab='Articles per year',xlab='Year',border='Black',col=rgb(0,1,0,0.3),xlim = c(2019,2023), breaks = seq(2018.5,2022.5,1),add = TRUE)
Data_3 <- EUtilsSummary(Object_3, mindate = 2021, maxdate = 2023)
get3 <- EUtilsGet(Data_3)
Years3 <- YearPubmed(get3)
hist(Years3,  ylab='Articles per year',xlab='Year',border='Black',col=rgb(0,0,1,0.3),xlim = c(2019,2023), breaks = seq(2018.5,2022.5,1),add = TRUE)
legend('topright', c(Object_1,Object_2,Object_3), lty = c(1,1,1), col = c('red','darkgray',rgb(1,0,1)),bty = 'n')
legend('topright', c(Object_1,Object_2,Object_3), lty = c(1,1,1), col = c('red','darkgray',rgb(1,0,1)),bty = 'n')
Data_1 <- EUtilsSummary(Object_1, mindate = 2021, maxdate = 2023)
get1 <- EUtilsGet(Data_1)
Years1 <- YearPubmed(get1)
hist(Years1, main = 'Diseases', ylab='Articles per year',xlab='Year',border='Black',col=rgb(1,0,0,0.3),xlim = c(2019,2023), breaks = seq(2018.5,2022.5,1))
Data_2 <- EUtilsSummary(Object_2, mindate = 2021, maxdate = 2023)
get2 <- EUtilsGet(Data_2)
Years2 <- YearPubmed(get2)
hist(Years2, ylab='Articles per year',xlab='Year',border='Black',col=rgb(0,1,0,0.3),xlim = c(2019,2023), breaks = seq(2018.5,2022.5,1),add = TRUE)
Data_3 <- EUtilsSummary(Object_3, mindate = 2021, maxdate = 2023)
get3 <- EUtilsGet(Data_3)
Years3 <- YearPubmed(get3)
hist(Years3,  ylab='Articles per year',xlab='Year',border='Black',col=rgb(0,0,1,0.3),xlim = c(2019,2023), breaks = seq(2018.5,2022.5,1),add = TRUE)
legend('topright', c(Dis_1,Dis_2,Dis_3), lty = c(1,1,1), col = c('red','darkgray',rgb(1,0,1)),bty = 'n')
Data_1 <- EUtilsSummary(Object_1, mindate = 2021, maxdate = 2023)
get1 <- EUtilsGet(Data_1)
Years1 <- YearPubmed(get1)
hist(Years1, main = 'Diseases', ylab='Articles per year',xlab='Year',border='Black',col=rgb(1,0,0,0.3),xlim = c(2019,2023), breaks = seq(2018.5,2022.5,1))
Data_2 <- EUtilsSummary(Object_2, mindate = 2021, maxdate = 2023)
get2 <- EUtilsGet(Data_2)
Years2 <- YearPubmed(get2)
hist(Years2, ylab='Articles per year',xlab='Year',border='Black',col=rgb(0,1,0,0.3),xlim = c(2019,2023), breaks = seq(2018.5,2022.5,1),add = TRUE)
Data_3 <- EUtilsSummary(Object_3, mindate = 2021, maxdate = 2023)
get3 <- EUtilsGet(Data_3)
Years3 <- YearPubmed(get3)
hist(Years3,  ylab='Articles per year',xlab='Year',border='Black',col=rgb(0,0,1,0.3),xlim = c(2019,2023), breaks = seq(2018.5,2022.5,1),add = TRUE)
legend('topright', c(Object_1, Object_2, Object_3), lty = c(1,1,1), col = c('red','darkgray',rgb(1,0,1)),bty = 'n')
#install.packages('treemap')
library(treemap)
install.packages('treemap')
#install.packages('treemap')
library(treemap)
group <- c(rep(Object_1,3),rep(Object_2,3),rep(Object_3,3))
subgroup <- c(2020,2021,2022)
#Creating three vectors that have all the appearances of each article per year
Treemap1<-table(Years1)
Treemap_Values_1<-unname(Treemap1)
Treemap2<-table(Years2)
Treemap_Values_2<-unname(Treemap2)
Treemap3<-table(Years3)
Treemap_Values_3<-unname(Treemap3)
#Combining these vectors into one
Treemap_values <- c(Treemap_Values_1,Treemap_Values_2,Treemap_Values_3)
#Plotting the treemap
data_treemap <- data.frame(group,subgroup,Treemap_values)
#number of abstracts
query1 <- EUtilsSummary(Object_1, mindate = 2020, maxdate = 2023)
print(query1)
#install.packages('treemap')
library(treemap)
group <- c(rep(Object_1,3),rep(Object_2,3),rep(Object_3,3))
subgroup <- c(2022, 2023)
#Creating three vectors that have all the appearances of each article per year
Treemap1<-table(Years1)
Treemap_Values_1<-unname(Treemap1)
Treemap2<-table(Years2)
Treemap_Values_2<-unname(Treemap2)
#Combining these vectors into one
Treemap_values <- c(Treemap_Values_1,Treemap_Values_2)
#Plotting the treemap
data_treemap <- data.frame(group,subgroup,Treemap_values)
treemap(data_treemap, index =c('group','subgroup'), vSize = 'Treemap_values',type = 'index')
#Plotting the treemap
data_treemap <- data.frame(group,subgroup,Treemap_values)
treemap(data_treemap, index =('group','subgroup'), vSize = 'Treemap_values',type = 'index')
#Plotting the treemap
data_treemap <- data.frame(group,subgroup,Treemap_values)
treemap(data_treemap, index =c('group','subgroup'), vSize = 'Treemap_values',type = 'index')
data_treemap <- data.frame(group,subgroup,Treemap_values)
treemap(data_treemap, index =c("group","subgroup"), vSize = 'Treemap_values',type = 'index')
#install.packages('treemap')
library(treemap)
group <- c(rep(Dis_1,3),rep(Dis_2,3),rep(Dis_3,3))
subgroup <- c(2020,2021,2022)
#Creating three vectors that have all the appearances of each article per year
Treemap1<-table(Years1)
Treemap_Values_1<-unname(Treemap1)
Treemap2<-table(Years2)
Treemap_Values_2<-unname(Treemap2)
Treemap3<-table(Years3)
Treemap_Values_3<-unname(Treemap3)
#Combining these vectors into one
Treemap_values <- c(Treemap_Values_1,Treemap_Values_2,Treemap_Values_3)
#Plotting the treemap
data_treemap <- data.frame(group,subgroup,Treemap_values)
treemap(data_treemap, index =c('group','subgroup'), vSize = 'Treemap_values',type = 'index')
#install.packages('treemap')
library(treemap)
group <- c(rep(Object_1,3),rep(Object_2,3),rep(Object_3,3))
subgroup <- c(2022, 2023)
#Creating three vectors that have all the appearances of each article per year
Treemap1<-table(Years1)
Treemap_Values_1<-unname(Treemap1)
Treemap2<-table(Years2)
Treemap_Values_2<-unname(Treemap2)
#Combining these vectors into one
Treemap_values <- c(Treemap_Values_1,Treemap_Values_2)
#Plotting the treemap
data_treemap <- data.frame(group,subgroup,Treemap_values)
treemap(data_treemap, vSize = 'Treemap_values',type = 'index')
treemap(data_treemap, index =c('group'), vSize = 'Treemap_values',type = 'index')
#install.packages('treemap')
library(treemap)
group <- c(rep(Object_1,3),rep(Object_2,3),rep(Object_3,3))
subgroup <- c(2022, 2023)
#Creating three vectors that have all the appearances of each article per year
Treemap1<-table(Years1)
Treemap_Values_1<-unname(Treemap1)
Treemap2<-table(Years2)
Treemap_Values_2<-unname(Treemap2)
group_by(group, subgroup)
install.packages('xtable')
install.packages('dplyr')
install.packages('dplyr')
#install.packages('treemap')
#install.packages('xtable')
#install.packages('dplyr')
library(xtable)
library(dplyr)
library(treemap)
group <- c(rep(Object_1,3),rep(Object_2,3),rep(Object_3,3))
subgroup <- c(2022, 2023)
#Creating three vectors that have all the appearances of each article per year
Treemap1<-table(Years1)
Treemap_Values_1<-unname(Treemap1)
Treemap2<-table(Years2)
Treemap_Values_2<-unname(Treemap2)
group_by(group, subgroup)
treemap(data_treemap, index =c('group','subgroup'), vSize = 'Treemap_values',type = 'index')
treemap(data_treemap, index =c(group,subgroup), vSize = 'Treemap_values',type = 'index')
index = c(group, subgroup)
data_treemap <- data.frame(group,subgroup,Treemap_values)
treemap(data_treemap, index, vSize = 'Treemap_values',type = 'index')
index = c('group', 'subgroup')
treemap(data_treemap, index, vSize = 'Treemap_values',type = 'index')
